name: docker-debian8-vue2-elem
on: workflow_dispatch
jobs:
  ubuntu:
    name: Ubuntu Build
    runs-on: ubuntu-latest
    steps:
      - name: DumpInfo
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          JOB_CONTEXT: ${{ toJson(job) }}
          STEPS_CONTEXT: ${{ toJson(steps) }}
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: |
          echo "curl cip.cc" && curl cip.cc
          echo "env" && env
          echo "pwd" && pwd
          echo "cat /proc/cpuinfo" && cat /proc/cpuinfo
          echo "cat /proc/cmdline" && cat /proc/cmdline
          echo "df -h" && df -h
          echo "fdisk -l" && fdisk -l
          echo "\$GITHUB_PATH" && echo $GITHUB_PATH
          echo "\$GITHUB_ENV" && echo $GITHUB_ENV
          echo "\$GITHUB_SHA" && echo $GITHUB_SHA 
          echo "\$GITHUB_REPOSITORY" && echo $GITHUB_REPOSITORY
          echo "\$GITHUB_WORKSPACE" && echo $GITHUB_WORKSPACE
          echo "\$GITHUB_CONTEXT" && echo "$GITHUB_CONTEXT"
          echo "\$JOB_CONTEXT" && echo "$JOB_CONTEXT"
          echo "\$STEPS_CONTEXT" && echo "$STEPS_CONTEXT"
          echo "\$RUNNER_CONTEXT" && echo "$RUNNER_CONTEXT"
          echo "\$STRATEGY_CONTEXT" && echo "$STRATEGY_CONTEXT"
          echo "\$MATRIX_CONTEXT" && echo "$MATRIX_CONTEXT"
      - name: GitClone
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt-get -yqq update
          sudo DEBIAN_FRONTEND=noninteractive apt-get -yqq install build-essential vim wget curl git make gcc unzip
          sudo DEBIAN_FRONTEND=noninteractive apt-get -yqq install wget curl vim cmake make gcc g++ automake openssl git unzip zip build-essential libssl-dev zlib1g-dev autoconf flex bison gperf libsqlite3-dev libicu-dev -y
          #docker.io
          sudo DEBIAN_FRONTEND=noninteractive apt-get -yqq install procps inetutils-ping 
          #sudo DEBIAN_FRONTEND=noninteractive apt-get -yqq install x11vnc xvfb x11-apps openbox
          #sudo DEBIAN_FRONTEND=noninteractive apt-get -yqq install imagemagick
          echo "host启动docker容器"
          docker pull debian:8
          docker run --name  "debian8" -itd --init debian:8
          git clone --depth 1 https://github.com/sfantree/action_run.git
          docker cp action_run/script/debian8-vue2-elem.sh debian8:/root/
          docker exec "debian8" /bin/bash -c "mv /root/debian8-vue2-elem.sh /root/run.sh"
          docker exec "debian8" /bin/bash -c "chmod +x /root/run.sh"
          docker exec "debian8" /bin/bash -c "bash /root/run.sh"
          docker cp debian8:/tmp/elm.zip /tmp/elm.zip
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: elm.zip
          path: /tmp/elm.zip
